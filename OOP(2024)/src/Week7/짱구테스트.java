package Week7;

public class 짱구테스트 {
	public static void main(String[] args)
	{
		할머니 할 = new 할머니();
		엄마 엄 = new 엄마();
		짱구 짱 = new 짱구();
		엄마 mom = new 짱구();
		할머니 grad = new 짱구();
		
		mom.요리하기(); //짱구객체를 엄마시선으로 바라봄, 여기서 호출된 요리하기는 짱구 클래스의 요리하기
		grad.요리하기(); //지팡이, 레시피, 요리하기(짱구버전)
		mom.할머니처럼요리하기(); //여기의 할머니처럼요리하기는 짱구 클래스의 것
		//즉 보이는건 엄마 클래스 기준으로 보이고 오버라이딩된 것에 한해서만 하위 클래스의 것이 실행댐
		
		할.요리하기();
		엄.요리하기();
		엄.청소하기();
		
		짱.청소하기();
		짱.요리하기();
		
		//짱구가 엄마에게, 엄마가 할머니에게 요리 요청
		짱.할머니처럼요리하기();
		//짱구가 할머니에게 요리 요청
		짱.요리하기(할);
		
		//짱구가 super()를 이용해 엄마에게 요리 요청
		짱.엄마처럼요리하기();
		//짱구가 엄마 클래스의 객체를 만들어 그 객체에 요리를 요청
		짱.요리하기(엄);
		
		짱.열심히공부하기();
		짱.공부하기();
		
		//엄마가 짱구의 핸드폰을 뺏음
		엄.핸드폰뺏기(짱);
		짱.공부하기();
		
		//엄마가 압수한 폰을 다시 짱구에게 set
		//그러나 아직 엄마의 핸드폰 압수bag에는 핸드폰이 있는 상태
		//아래처럼
		//짱.setPhone(엄.핸드폰압수bag);도 가능하지만
		//짱구에게 핸드폰몰래가져오기()기능을 추가해본다
		짱.핸드폰몰래가져오기(엄);
		짱.공부하기();
		
	}
}
